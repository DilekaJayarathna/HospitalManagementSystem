/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.HMS;

import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
/**
 *
 * @author Dileka
 */
public class TestsResults extends javax.swing.JInternalFrame {
    
 
    DefaultListModel listModel = new DefaultListModel();
    /**
     * Creates new form TestsResults
     */
    public TestsResults() {
        initComponents();
        AddListPatientID();
    }
    //Add patient ids of patient to list from patient table
    public void AddListPatientID(){
        try{
            Statement st=database.getStatement();
            ResultSet rs=st.executeQuery("SELECT PatientID FROM Patient");
            
            
            while (rs.next()) {
                String s=rs.getString("PatientID");
                
                listModel.addElement(s);
            }
            
            listPatient.setModel(listModel);
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableTestResult = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        listPatient = new javax.swing.JList<>();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtPatientID = new javax.swing.JTextField();
        txtCharge = new javax.swing.JTextField();
        btnAttach = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtTest = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtResult = new javax.swing.JTextArea();

        tableTestResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient ID", "Test", "Result", "Test Charge"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableTestResult);

        setBackground(new java.awt.Color(244, 244, 254));
        setClosable(true);
        setIconifiable(true);
        setPreferredSize(new java.awt.Dimension(720, 510));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 20)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 102, 102));
        jLabel11.setText("Tests & Results");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, 240, -1));

        txtSearch.setEditable(false);
        txtSearch.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        getContentPane().add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 90, 30));

        jLabel3.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel3.setText("Enter Patient ID");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, -1, 30));

        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/HMS/Search-icon.png"))); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        getContentPane().add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, 100, -1));

        listPatient.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        listPatient.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listPatientValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(listPatient);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, 90, 290));

        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/HMS/Add-icon.png"))); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 440, 90, -1));

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/HMS/update-icon.png"))); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 440, -1, -1));

        btnClose.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/HMS/symbol-delete-icon.png"))); // NOI18N
        btnClose.setText("Cancel");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        getContentPane().add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 440, -1, -1));

        jLabel1.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel1.setText("Patient ID");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 90, 60, 20));

        jLabel2.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel2.setText("Test Name");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 130, 80, 20));

        jLabel4.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel4.setText("Result");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 210, 50, 50));

        jLabel5.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel5.setText("Charge Of Test");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 340, 90, 20));

        txtPatientID.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        getContentPane().add(txtPatientID, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 90, 310, -1));

        txtCharge.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        getContentPane().add(txtCharge, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 340, 310, -1));

        btnAttach.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnAttach.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/HMS/attach-icon.png"))); // NOI18N
        btnAttach.setText("Attach");
        btnAttach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAttachActionPerformed(evt);
            }
        });
        getContentPane().add(btnAttach, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 290, 100, 30));

        jLabel13.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel13.setText("Rs.");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 340, 20, 20));

        txtTest.setColumns(20);
        txtTest.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtTest.setRows(5);
        jScrollPane2.setViewportView(txtTest);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 130, 310, 70));

        txtResult.setColumns(20);
        txtResult.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtResult.setRows(5);
        jScrollPane4.setViewportView(txtResult);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 220, 310, 70));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        int x = JOptionPane.showConfirmDialog(null, "Are you sure you want to exit?");
        if(x == 0){
            this.dispose();
        }
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        
        //Checking data fields of the jinternalform whether there are null values before insert
        if(txtPatientID.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Patient Id can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(txtTest.getText().equals("Select Ward")){
            JOptionPane.showMessageDialog(null,"Test Name can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(txtResult.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Result can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(txtCharge.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Charge of test can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
  
        else{
            try{  
                Statement stat=database.getStatement();
            
                //Check whether there are duplicate patient ids
                ResultSet rs=stat.executeQuery("SELECT PatientID FROM TestsResults WHERE PatientID='"+txtPatientID.getText()+"'");
           
                if(rs.next()==true){
                    JOptionPane.showMessageDialog(null,"Entered Patient ID already EXISTS!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
                }
        
        
                else{
                    //Insert data into TestResults table
                    stat.executeUpdate("INSERT INTO TestsResults(PatientID,Test,Result,TestCharge) VALUES('"+txtPatientID.getText()+"','"+txtTest.getText()+"','"+txtResult.getText()+"','"+txtCharge.getText()+"')");
                    JOptionPane.showMessageDialog(null,"Data added successfully!");
                    
                    //Empty the fields in jinternalform that entered 
                    txtPatientID.setText("");
                    txtTest.setText("");
                    txtResult.setText("");
                    txtCharge.setText("");
        
                    
                }
            }
            catch(Exception e){
                e.printStackTrace();
            }
      
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnAttachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAttachActionPerformed
        
        //Choose a file to attach
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f=chooser.getSelectedFile();
        String filename=f.getAbsolutePath();
        txtResult.setText(filename);
        
    }//GEN-LAST:event_btnAttachActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        
        //Checking data fields of the jinternalform whether there are null values before update
        if(txtPatientID.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Patient Id can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(txtTest.getText().equals("Select Ward")){
            JOptionPane.showMessageDialog(null,"Test Name can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(txtResult.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Result can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(txtCharge.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Charge of test can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
  
        else{
        
            int x = JOptionPane.showConfirmDialog(null, "Are you sure you want to update this record?");
            if(x == 0){
                try{
                    Statement st=database.getStatement();
                    
                    //Update table with changed values
                    
                    st.executeUpdate("UPDATE TestsResults SET PatientID='"+txtPatientID.getText()+"', Test='"+txtTest.getText()+"', Result='"+txtResult.getText()+"', TestCharge='"+txtCharge.getText()+"' WHERE PatientId='"+txtPatientID.getText()+"'");
                        
                    JOptionPane.showMessageDialog(null,"Data updated successfully!");
                        
                    //Empty the fields in jinternalform that entered
                    txtPatientID.setText("");
                    txtTest.setText("");
                    txtResult.setText("");
                    txtCharge.setText("");
                    
                }
                catch(Exception e){
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
           
        //Search database which match the entered patient id
        try{
            
            Statement st=database.getStatement();
            ResultSet rs=st.executeQuery("SELECT * FROM TestsResults WHERE PatientID='"+txtSearch.getText()+"'");
            
                 
            while(rs.next()){
                txtPatientID.setText(rs.getString("PatientID"));
                txtTest.setText(rs.getString("Test"));
                txtResult.setText(rs.getString("Result"));
                txtCharge.setText(rs.getString("TestCharge"));
                
            }
            
        }
        catch(Exception ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void listPatientValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listPatientValueChanged
        
        //Set textfields to selected value 
        String selected = listPatient.getSelectedValue().toString();
        txtSearch.setText(selected); 
        txtPatientID.setText(selected);
    }//GEN-LAST:event_listPatientValueChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAttach;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList<String> listPatient;
    private javax.swing.JTable tableTestResult;
    private javax.swing.JTextField txtCharge;
    private javax.swing.JTextField txtPatientID;
    private javax.swing.JTextArea txtResult;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextArea txtTest;
    // End of variables declaration//GEN-END:variables
}
