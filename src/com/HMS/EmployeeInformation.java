/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.HMS;
import java.sql.Statement;
import java.sql.*;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Dileka
 */
public class EmployeeInformation extends javax.swing.JInternalFrame {
    UserAdmin useradmin;
    DefaultListModel listModel = new DefaultListModel();
    /**
     * Creates new form EmployeeInformation
     */
    public EmployeeInformation() {
        initComponents();
        AddListEmpID();
    }
    
    //Add Employee ids of employees to list from employee table 
    public void AddListEmpID(){
        try{
            Statement st=database.getStatement();
            ResultSet rs=st.executeQuery("SELECT EmployeeId FROM Employee");
            
            
            while (rs.next()) {
                String s=rs.getString("EmployeeId");
                
                listModel.addElement(s);
            }
            
            listEmpId.setModel(listModel);
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel11 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        txtEmpId = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        radioMale = new javax.swing.JRadioButton();
        radioFemale = new javax.swing.JRadioButton();
        txtPhone = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAddress = new javax.swing.JTextPane();
        btnAdd = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listEmpId = new javax.swing.JList<>();
        txtPosition = new javax.swing.JTextField();

        setBackground(new java.awt.Color(244, 244, 254));
        setClosable(true);
        setIconifiable(true);
        setPreferredSize(new java.awt.Dimension(720, 510));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 20)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 102, 102));
        jLabel11.setText("Employee Infomation");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, 260, -1));

        jLabel2.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel2.setText("Position");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 270, 70, 20));

        jLabel4.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel4.setText("Name with initials");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 120, 110, 20));

        jLabel7.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel7.setText("Address");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 180, 60, 30));

        jLabel8.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel8.setText("Phone Number");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 240, -1, 20));

        jLabel9.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel9.setText("Gender");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 150, 90, 20));

        jLabel1.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel1.setText("Employee ID");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 90, -1, -1));

        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/HMS/Search-icon.png"))); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        getContentPane().add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, 100, -1));

        btnClose.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/HMS/symbol-delete-icon.png"))); // NOI18N
        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        getContentPane().add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 440, -1, -1));

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/HMS/update-icon.png"))); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 440, -1, -1));

        txtSearch.setEditable(false);
        txtSearch.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        getContentPane().add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 90, 30));

        txtEmpId.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        getContentPane().add(txtEmpId, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 90, 210, -1));

        txtName.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        getContentPane().add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 120, 210, -1));

        buttonGroup1.add(radioMale);
        radioMale.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        radioMale.setText("Male");
        getContentPane().add(radioMale, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 150, -1, -1));

        buttonGroup1.add(radioFemale);
        radioFemale.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        radioFemale.setText("Female");
        getContentPane().add(radioFemale, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 150, -1, -1));

        txtPhone.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        getContentPane().add(txtPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 240, 210, -1));

        txtAddress.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jScrollPane1.setViewportView(txtAddress);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 180, 210, 50));

        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/HMS/Add-icon.png"))); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 440, -1, -1));

        jLabel3.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel3.setText("Enter Employee ID");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 54, -1, 20));
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 400, 60, 30));

        listEmpId.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        listEmpId.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listEmpIdValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(listEmpId);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, 90, 290));

        txtPosition.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        getContentPane().add(txtPosition, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 270, 210, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        
        //Search database which match the entered employee id
        try{
            
            Statement st=database.getStatement();
            ResultSet rs=st.executeQuery("SELECT * FROM Employee WHERE EmployeeId='"+txtSearch.getText()+"'");
            
                 
            while(rs.next()){
                txtEmpId.setText(rs.getString("EmployeeId"));
                txtName.setText(rs.getString("NameWithInitials"));
                String GN = rs.getString("Gender");
                if (GN.equals("Female")){
                    radioMale.setSelected(false);
                    radioFemale.setSelected(true);

                }
                else{
                    radioFemale.setSelected(false);
                    radioMale.setSelected(true);
                } 
                txtAddress.setText(rs.getString("Address"));
                txtPhone.setText(rs.getString("PhoneNumber"));
                txtPosition.setText(rs.getString("Position"));
                
                
            }
            
        }
        catch(Exception ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        int x = JOptionPane.showConfirmDialog(null, "Are you sure you want to exit?");
        if(x == 0){
            this.dispose();
        }
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed

        //Checking data fields of the jinternalform whether there are null values before update
        if(txtEmpId.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Employee Id can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(txtName.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Name With Initials can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(radioMale.isSelected()==false && radioFemale.isSelected()==false){
            JOptionPane.showMessageDialog(null,"Gender can not be NOT SELECTED!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(txtAddress.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Address can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(txtPhone.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Phone Number can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(txtPosition.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Position can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        
        else{
        
        int x = JOptionPane.showConfirmDialog(null, "Are you sure you want to update this record?");
        if(x == 0){
        
        //Update table with changed values
        try{
            
            String gender="";
            if(radioMale.isSelected()==true){
                gender="Male";
            }
            else{
                gender="Female";
            }
            
           Statement st=database.getStatement();
           
           st.executeUpdate("UPDATE Employee SET EmployeeId='"+txtEmpId.getText()+"', NameWithInitials='"+txtName.getText()+"', Gender='"+gender+"', Address='"+txtAddress.getText()+"', PhoneNumber='"+txtPhone.getText()+"', Position='"+txtPosition.getText()+"' WHERE EmployeeId='"+txtEmpId.getText()+"'");
           
           JOptionPane.showMessageDialog(null,"Data updated successfully!");
           
            //Empty the fields in jinternalform that entered 
            txtEmpId.setText("");
            txtName.setText("");
            buttonGroup1.clearSelection();
            txtAddress.setText("");
            txtPhone.setText("");
            txtPosition.setText("");
            
        }
        catch(Exception e){
            e.printStackTrace();
        }
       
        }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        
        //Checking data fields of the jinternalform whether there are null values before insert
        if(txtEmpId.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Employee Id can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(txtName.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Name With Initials can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(radioMale.isSelected()==false && radioFemale.isSelected()==false){
            JOptionPane.showMessageDialog(null,"Gender can not be NOT SELECTED!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(txtAddress.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Address can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(txtPhone.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Phone Number can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(txtPosition.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Position can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        
        else{
        try{
            
            String gender="";
            if(radioMale.isSelected()==true){
                gender="Male";
            }
            else{
                gender="Female";
            }
            
            Statement stat=database.getStatement();
            
            //Check whether there are duplicate employee ids
            ResultSet rs=stat.executeQuery("SELECT EmployeeId FROM Employee WHERE EmployeeId='"+txtEmpId.getText()+"'");
           
            if(rs.next()==true){
                JOptionPane.showMessageDialog(null,"Entered Employee ID already EXISTS!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
            }
        
        
            else{
            //Insert data into employee table
            stat.executeUpdate("INSERT INTO Employee(EmployeeId,NameWithInitials,Gender,Address,PhoneNumber,Position) VALUES('"+txtEmpId.getText()+"','"+txtName.getText()+"','"+gender+"','"+txtAddress.getText()+"','"+txtPhone.getText()+"','"+txtPosition.getText()+"')");
        
            JOptionPane.showMessageDialog(null,"Data added successfully!");
            
            //Empty the fields in jinternalform that entered 
            txtEmpId.setText("");
            txtName.setText("");
            buttonGroup1.clearSelection();
            txtAddress.setText("");
            txtPhone.setText("");
            txtPosition.setText("");
            
        
            
            }
            
        }
        catch(Exception e){
            e.printStackTrace();
        }
       
        }
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void listEmpIdValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listEmpIdValueChanged
        
        //Set textfield to selected value 
        String selected=listEmpId.getSelectedValue().toString();
        txtSearch.setText(selected);
    }//GEN-LAST:event_listEmpIdValueChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> listEmpId;
    private javax.swing.JRadioButton radioFemale;
    private javax.swing.JRadioButton radioMale;
    private javax.swing.JTextPane txtAddress;
    private javax.swing.JTextField txtEmpId;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtPosition;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
