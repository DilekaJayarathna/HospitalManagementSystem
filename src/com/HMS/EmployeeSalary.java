/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.HMS;

import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Dileka
 */
public class EmployeeSalary extends javax.swing.JInternalFrame {
     DefaultListModel listModel = new DefaultListModel();
    /**
     * Creates new form EmployeeAttendence
     */
    public EmployeeSalary() {
        initComponents();
        AddListEmpID();
    }

    //Add Employee ids of employees to list from employee table 
    public void AddListEmpID(){
        try{
            Statement st=database.getStatement();
            ResultSet rs=st.executeQuery("SELECT EmployeeId FROM Employee");
            
            
            while (rs.next()) {
                String s=rs.getString("EmployeeId");
                
                listModel.addElement(s);
            }
            
            listEmpId.setModel(listModel);
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel11 = new javax.swing.JLabel();
        btnClose = new javax.swing.JButton();
        btnCalculate = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        txtEmpId = new javax.swing.JTextField();
        txtUnitSalary = new javax.swing.JTextField();
        txtSalary = new javax.swing.JTextField();
        txtSearch = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listEmpId = new javax.swing.JList<>();
        btnSearch = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtPosition = new javax.swing.JTextField();
        comboDays = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(244, 244, 254));
        setClosable(true);
        setIconifiable(true);
        setPreferredSize(new java.awt.Dimension(720, 510));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 20)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 102, 102));
        jLabel11.setText("Salary Of Employees");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, 320, -1));

        btnClose.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/HMS/symbol-delete-icon.png"))); // NOI18N
        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        getContentPane().add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 440, -1, -1));

        btnCalculate.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnCalculate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/HMS/process-icon.png"))); // NOI18N
        btnCalculate.setText("Calculate");
        btnCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateActionPerformed(evt);
            }
        });
        getContentPane().add(btnCalculate, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 310, 120, -1));

        jLabel1.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel1.setText("Employee ID");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 90, -1, -1));

        jLabel2.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel2.setText("Unit Salary");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 170, -1, -1));

        jLabel3.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel3.setText("Attended Days Of Month");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 210, -1, -1));

        jLabel4.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel4.setText("Salary");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 270, -1, -1));

        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/HMS/Add-icon.png"))); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 440, -1, -1));

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/HMS/update-icon.png"))); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 440, -1, -1));
        getContentPane().add(txtEmpId, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 90, 190, -1));
        getContentPane().add(txtUnitSalary, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 170, 190, -1));
        getContentPane().add(txtSalary, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 270, 190, -1));

        txtSearch.setEditable(false);
        txtSearch.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        getContentPane().add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 90, 30));

        jLabel5.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel5.setText("Enter Employee ID");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 54, -1, 20));

        listEmpId.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        listEmpId.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listEmpIdValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(listEmpId);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, 90, 290));

        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/HMS/Search-icon.png"))); // NOI18N
        btnSearch.setText("Serach");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        getContentPane().add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, -1, -1));

        jLabel13.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel13.setText("Rs.");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 170, 20, 20));

        jLabel6.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel6.setText("Position");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 130, 70, 20));

        txtPosition.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        getContentPane().add(txtPosition, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 130, 190, -1));

        comboDays.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select No Of Days", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        getContentPane().add(comboDays, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 210, 190, -1));

        jLabel14.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel14.setText("Rs.");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 270, 20, 20));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listEmpIdValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listEmpIdValueChanged
        
        //Set fields to selected value  
        String selected = listEmpId.getSelectedValue().toString();

        txtSearch.setText(selected);
        
        //Set fields from the database with selected value
        try{
            
            Statement st=database.getStatement();
            ResultSet rs1=st.executeQuery("SELECT EmployeeId,Position FROM Employee WHERE EmployeeId='"+txtSearch.getText()+"'");
            
                 
            while(rs1.next()){
                txtEmpId.setText(rs1.getString("EmployeeId"));
                txtPosition.setText(rs1.getString("Position"));
               
            }
            txtUnitSalary.setText("");
            comboDays.setSelectedItem("Select No Of Days");
            txtSalary.setText("");
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_listEmpIdValueChanged

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        int x = JOptionPane.showConfirmDialog(null, "Are you sure you want to exit?");
        if(x == 0){
            this.dispose();
        }
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        
        //Checking data fields of the jinternalform whether there are null values before insert
        if(txtEmpId.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Employee Id can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(txtPosition.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Position can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        
        else if(txtUnitSalary.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Unit Salary can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(comboDays.getSelectedItem().equals("Select No Of Days")){
            JOptionPane.showMessageDialog(null,"Attended Days Of Month can not be NOT SELECTED!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(txtSalary.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Salary can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else{
        
        try{
          
            Statement stat=database.getStatement();
            
            //Check whether there are duplicate employee ids
            ResultSet rs=stat.executeQuery("SELECT EmployeeId FROM Salary WHERE EmployeeId='"+txtEmpId.getText()+"'");
           
            if(rs.next()==true){
                JOptionPane.showMessageDialog(null,"Entered Employee Id already EXISTS!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
            }
        
        
            else{
            //Insert data into salary table
            stat.executeUpdate("INSERT INTO Salary(EmployeeId,Position,UnitSalary,AttendedDays,Salary) VALUES('"+txtEmpId.getText()+"','"+txtPosition.getText()+"','"+txtUnitSalary.getText()+"','"+comboDays.getSelectedItem().toString()+"','"+txtSalary.getText()+"')");
        
            JOptionPane.showMessageDialog(null,"Data added successfully!");
            
            //Empty the fields in jinternalform that entered 
            txtEmpId.setText("");
            txtPosition.setText("");
            txtUnitSalary.setText("");
            comboDays.setSelectedItem("Select No Of Days");
            txtSalary.setText("");
        
            
            }
        }
          
        catch(Exception e){
            e.printStackTrace();
        }
        
        
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        
        //Checking data fields of the jinternalform whether there are null values before update
        if(txtEmpId.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Employee Id can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(txtPosition.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Position can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        
        else if(txtUnitSalary.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Unit Salary can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(comboDays.getSelectedItem().equals("Select No Of Days")){
            JOptionPane.showMessageDialog(null,"Attended Days Of Month can not be NOT SELECTED!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(txtSalary.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Salary can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else{
            
            int x = JOptionPane.showConfirmDialog(null, "Are you sure you want to update this record?");
            if(x == 0){
            
            //Update query with changed values
            try{
            
                Statement st=database.getStatement();
                st.executeUpdate("UPDATE Salary SET EmployeeId='"+txtEmpId.getText()+"', Position='"+txtPosition.getText()+"', UnitSalary='"+txtUnitSalary.getText()+"', AttendedDays='"+comboDays.getSelectedItem()+"', Salary='"+txtSalary.getText()+"' WHERE EmployeeId='"+txtEmpId.getText()+"'");
           
                JOptionPane.showMessageDialog(null,"Data updated successfully!");
                
                //Empty the fields in jinternalform that entered 
                txtEmpId.setText("");
                txtPosition.setText("");
                txtUnitSalary.setText("");
                comboDays.setSelectedItem("Select No Of Days");
                txtSalary.setText("");
            }
            catch(Exception e){
                e.printStackTrace();
            }
            
            } 
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        
        //Search database which match the entered employee id
        try{
            
            Statement st=database.getStatement();
       
            ResultSet rs=st.executeQuery("SELECT * FROM Salary WHERE EmployeeId='"+txtSearch.getText()+"'");
            
            while(rs.next()){
                
                txtUnitSalary.setText(rs.getString("UnitSalary"));
                comboDays.setSelectedItem(rs.getString("AttendedDays"));
                txtSalary.setText(rs.getString("Salary"));
            }
        }
        catch(Exception ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateActionPerformed
        
        //Checking data fields of the jinternalform whether there are null values before calculate
        if(txtEmpId.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Employee Id can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(txtPosition.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Position can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        
        else if(txtUnitSalary.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Unit Salary can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(comboDays.getSelectedItem().equals("Select No Of Days")){
            JOptionPane.showMessageDialog(null,"Attended Days Of Month can not be NOT SELECTED!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        
        else{
            //Calculate the salary
            double unitSalary=Double.parseDouble(txtUnitSalary.getText());
            int days=Integer.parseInt(comboDays.getSelectedItem().toString());
            double salary=unitSalary*days;
            
            txtSalary.setText(Double.toString(salary));
            
        }
    }//GEN-LAST:event_btnCalculateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCalculate;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> comboDays;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> listEmpId;
    private javax.swing.JTextField txtEmpId;
    private javax.swing.JTextField txtPosition;
    private javax.swing.JTextField txtSalary;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtUnitSalary;
    // End of variables declaration//GEN-END:variables
}
