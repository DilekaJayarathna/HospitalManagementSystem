/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.HMS;


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;


/**
 *
 * @author Dileka
 */
public class UserInformation extends javax.swing.JInternalFrame{
    Connection con=null;
    PreparedStatement pst=null;
    ResultSet rs=null;
    /**
     * Creates new form UserInformation
     */
    public UserInformation() {
        initComponents();
        con=database.connect();
        tableload();
    }
    
    
    //Load selected values to table 
    public void tableload(){
        try{
            Statement st=database.getStatement();
            ResultSet rs=st.executeQuery("SELECT UserId,UserName,Position,UserType FROM User");
 
            tableUser.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e){
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField3 = new javax.swing.JTextField();
        jFrame1 = new javax.swing.JFrame();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        txtUserId = new javax.swing.JTextField();
        txtUserName = new javax.swing.JTextField();
        txtCreatePass = new javax.swing.JPasswordField();
        txtConfirmPass = new javax.swing.JPasswordField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableUser = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        txtPosition = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        comboType = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtEmpId = new javax.swing.JTextField();

        jTextField3.setText("jTextField3");

        setBackground(new java.awt.Color(244, 244, 254));
        setClosable(true);
        setIconifiable(true);
        setPreferredSize(new java.awt.Dimension(720, 510));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel1.setText("User Name");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 70, 20));

        jLabel2.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel2.setText("Create Password");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 110, 20));

        jLabel3.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel3.setText("User ID");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 50, 20));

        jLabel4.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel4.setText("Confirm Password");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 120, 20));

        jLabel5.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel5.setText("Position");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 60, 20));

        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/HMS/user-add-icon.png"))); // NOI18N
        btnAdd.setText("Add User");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 440, 120, -1));

        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/HMS/symbol-delete-icon.png"))); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        getContentPane().add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 440, 110, -1));

        txtUserId.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        getContentPane().add(txtUserId, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, 160, -1));

        txtUserName.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        getContentPane().add(txtUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 160, -1));

        txtCreatePass.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        getContentPane().add(txtCreatePass, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 160, 160, -1));

        txtConfirmPass.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        getContentPane().add(txtConfirmPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 200, 160, -1));
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, 60, 30));

        tableUser.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tableUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "User ID", "User Name", "Position", "UserType"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableUser.setGridColor(new java.awt.Color(204, 204, 255));
        tableUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableUserMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableUser);
        if (tableUser.getColumnModel().getColumnCount() > 0) {
            tableUser.getColumnModel().getColumn(3).setHeaderValue("UserType");
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 70, 380, 320));

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon("C:\\Users\\Dileka\\Documents\\NetBeansProjects\\HospitalManagementSystem\\src\\com\\HMS\\User-Delete-icon.png")); // NOI18N
        btnDelete.setText("Delete User");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 440, 130, -1));

        jLabel11.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 20)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 102, 102));
        jLabel11.setText("User Infomation");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, 260, -1));

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/HMS/update-icon.png"))); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 440, 110, -1));

        txtPosition.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        getContentPane().add(txtPosition, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 280, 160, -1));

        jLabel7.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel7.setText("User Type");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, 70, 20));

        comboType.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        comboType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select User Type", "Administrator", "Clinical", "Non-Clinical" }));
        getContentPane().add(comboType, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 320, 160, -1));
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 440, 70, 40));

        jLabel9.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel9.setText("Employee ID");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, -1, -1));

        txtEmpId.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        getContentPane().add(txtEmpId, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 240, 160, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        
        //Checking data fields of the jinternalform whether there are null values before insert
        if(txtUserId.getText().equals("")){
            JOptionPane.showMessageDialog(null,"User Id can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(txtUserName.getText().equals("")){
            JOptionPane.showMessageDialog(null,"User Name can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(txtCreatePass.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Create Password can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(txtConfirmPass.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Confirm password!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(txtEmpId.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Employee Id can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(txtPosition.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Position can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(comboType.getSelectedItem().equals("Select User Type")){
            JOptionPane.showMessageDialog(null,"User type can not be NOT SELECTED!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
  
        else{
        
        if(txtCreatePass.getText().equals(txtConfirmPass.getText())){
               
            try{  
                Statement stat=database.getStatement();
                
                //Check whether there are duplicate patient ids
                ResultSet rs=stat.executeQuery("SELECT UserId FROM User WHERE UserId='"+txtUserId.getText()+"'");
                
                if(rs.next()==true){
                    JOptionPane.showMessageDialog(null,"Entered User ID already EXISTS!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
                }
                
        
                else{
                
                    //Insert data into user table
                    stat.executeUpdate("INSERT INTO User(UserId,UserName,Password,EmployeeId,Position,UserType) VALUES('"+txtUserId.getText()+"','"+txtUserName.getText()+"','"+txtConfirmPass.getText()+"','"+txtEmpId.getText()+"','"+txtPosition.getText()+"','"+comboType.getSelectedItem()+"')");
                    JOptionPane.showMessageDialog(null, "User added successfully!");
                    
                    //Empty the fields in jinternalform that entered
                    txtUserId.setText("");
                    txtUserName.setText("");
                    txtCreatePass.setText("");
                    txtConfirmPass.setText("");
                    txtEmpId.setText("");
                    txtPosition.setText("");
                    comboType.setSelectedItem("Select User Type");
                }
            }
            catch(Exception e){
                e.printStackTrace();
            }
            tableload();
            
            
            
            
        }
            
       
        else{
            JOptionPane.showMessageDialog(null, "Passward Mismatch!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        int x = JOptionPane.showConfirmDialog(null, "Are you sure you want to exit?");
        if(x == 0){
            this.dispose();
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        
        int x = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this user?");
        if(x == 0){
        
        try{
            Statement st=database.getStatement();
            
            //Delete selected item from user table
            st.executeUpdate("DELETE FROM User WHERE UserId='"+txtUserId.getText()+"'");
         
            tableload();
        }
        catch(Exception ex){
            ex.printStackTrace();
        }
        
        //Empty the fields in jinternalform that entered 
        txtUserId.setText("");
        txtUserName.setText("");
        txtCreatePass.setText("");
        txtConfirmPass.setText("");
        txtEmpId.setText("");
        txtPosition.setText("");
        comboType.setSelectedItem("Select User Type");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        
        //Checking data fields of the jinternalform whether there are null values before update
        if(txtUserId.getText().equals("")){
            JOptionPane.showMessageDialog(null,"User Id can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(txtUserName.getText().equals("")){
            JOptionPane.showMessageDialog(null,"User Name can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(txtCreatePass.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Create Password can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(txtConfirmPass.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Confirm password!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(txtEmpId.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Employee Id can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(txtPosition.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Position can not be EMPTY!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        else if(comboType.getSelectedItem().equals("Select User Type")){
            JOptionPane.showMessageDialog(null,"User type can not be NOT SELECTED!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
  
        else{
        
        if(txtCreatePass.getText().equals(txtConfirmPass.getText())){
            int x = JOptionPane.showConfirmDialog(null, "Are you sure you want to update this user?");
            if(x == 0){
                try{
            
                    Statement st=database.getStatement();
                    
                    //Update table with changed values
                    st.executeUpdate("UPDATE User SET UserId='"+txtUserId.getText()+"', UserName='"+txtUserName.getText()+"',Password='"+txtConfirmPass.getText()+"',EmployeeId='"+txtEmpId.getText()+"',Position='"+txtPosition.getText()+"',UserType='"+comboType.getSelectedItem()+"' WHERE UserId='"+txtUserId.getText()+"'");
                }
                catch(Exception e){
                    e.printStackTrace();
                }
                
                //Empty the fields in jinternalform that entered
                txtUserId.setText("");
                txtUserName.setText("");
                txtCreatePass.setText("");
                txtConfirmPass.setText("");
                txtEmpId.setText("");
                txtPosition.setText("");
                comboType.setSelectedItem("Select User Type");
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Passward Mismatch!","Invalid Input!",JOptionPane.ERROR_MESSAGE);
        }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tableUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableUserMouseClicked
        
        //Display fields when click on a table record
        try{
            int r=tableUser.getSelectedRow();
        
            String userId=tableUser.getValueAt(r, 0).toString();
            String userName=tableUser.getValueAt(r, 1).toString();
            String position=tableUser.getValueAt(r, 2).toString();
            String userType=tableUser.getValueAt(r, 3).toString();
        
            txtUserId.setText(userId);
            txtUserName.setText(userName);
            txtPosition.setText(position);
            comboType.setSelectedItem(userType);
        
            Statement st=database.getStatement();
            ResultSet rs=st.executeQuery("SELECT Password,EmployeeId FROM User WHERE UserId='"+txtUserId.getText()+"'");
 
            while(rs.next()){
                txtCreatePass.setText(rs.getString("Password"));
                txtConfirmPass.setText(rs.getString("Password"));
                txtEmpId.setText(rs.getString("EmployeeId"));
            }
        }
        catch(Exception e){
            
        }
    }//GEN-LAST:event_tableUserMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> comboType;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTable tableUser;
    private javax.swing.JPasswordField txtConfirmPass;
    private javax.swing.JPasswordField txtCreatePass;
    private javax.swing.JTextField txtEmpId;
    private javax.swing.JTextField txtPosition;
    private javax.swing.JTextField txtUserId;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
